\chapter{Introdução}

Com o crescente desenvolvimento da computação que penetra cada vez mais em diversas áreas de conhecimento, a demanda por processamento tende a crescer rapidamente, tornando o desenvolvimento de aplicações cada vez mais complexo, exigindo cada vez mais desempenho e consequentemente poder de processamento. Para a execução dessas aplicações em tempo hábil, são necessários investimentos cada vez mais altos em \emph{hardwares} melhores, existindo porém um fator limitante (custo ou tecnologia).

Além disso, atualmente a grande quantidade de informação disponível exige análises cada vez mais precisas e detalhadas da informação processada tendo em vista a ajuda de tomada de decisões. Dessa forma, aplicações que antes eram centralizadas em uma única máquina transformaram-se em aplicações distribuídas em várias máquinas que são concorrentes e assíncronas.

A partir dessa motivação, aplicações são projetadas para rodar de forma descentralizada, com componentes e serviços rodando em diversos lugares distintos e comunicando-se uma com as outras através de mensagens. Cada módulo pode ter um objetivo específico, como capturar e processar eventos no ambiente computacional, processar informações, persistir eventos no banco de dados, enfim, uma vasta gama de operações que são assíncronas e independentes. A arquitetura dessas aplicações é projetada objetivando o alto paralelismo, flexibilidade, interoperabilidade, dentre outros aspectos.

Diversos~\emph{frameworks} tentam lidar com o problema da computação distribuída, porém alguns usam arquiteturas que são baseadas em processamento ordenado: Os dados são processados ordenadamente, não usufruindo de todo o processamento que poderia ocorrer se fosse realmente paralelo. Outros ~\emph{frameworks} são embasados em tecnologias que não são recomendáveis em um ambiente distribuído: O uso de recurso um compartilhado e blocante, que pode prejudicar o processamento em larga escola.

A computação distribuída toma formas ainda mais interessantes quando aplicada a contextos sensíveis a sociedade em geral. Áreas de atuação como Bolsa de Valores, Análise de Redes Sociais, Análise de Mídia Social, Informática na Educação, dentre outras. Em especial a esta última área, a possibilidade de auxílio no aprendizado do aluno eleva a importância deste setor na computação.

Na perspectiva da Informática na Educação (IE), a abordagem chamada Sistemas Tutores Inteligentes permite a representação de conhecimento de forma muito interessante. É possível a construção um modelo onde se representa o estudante (o objeto a quem se deve ensinar), o domínio do conteúdo (o conteúdo a ser ensinado) e o modelo pedagógico (a forma a ser ensinada). Esta abordagem permite o uso de vários conceitos da Inteligência Artificial para determinação de formas como o estudante é mais eficiente em aprender, ou seja, o seu estilo de aprendizagem. 

Determinar o estilo de aprendizagem mostra-se uma estratégia fundamental para que a transmissão de informações e vivências entre alunos e professores torne-se mais eficaz e perceptível, promovendo a criação de informações cada vez mais relevantes para o planejamento, acompanhamento e avaliação dos aprendizes.

Assim, conhecer os fatores relacionados ao processo de aprendizagem exige que as ferramentas computacionais aplicadas ao ensino consigam determinar eficientemente os estilos de aprendizagem. Dessa forma, aplicações tendem a ser mais complexas vistas ao alto grau de processamento que estas técnicas podem exigir.

\section{Problema}
Os ambientes educacionais de aprendizagem não possuem uma arquitetura apropriada para a inferência de modelos multidimensionais, pois a abordagem baseada em cliente-servidor não é apropriada para tal finalidade.

\section{Objetivos}
Tendo em vista o cenário atual apresentado, o presente trabalho tem como objetivo definir uma arquitetura distribuída na Web para auxiliar o processo de ensino-aprendizagem por meio da abordagem de sistema multiagente. 

Esta abordagem permitirá a construção e manutenção de um modelo multidimensional do estudante, a partir do qual os estilos de aprendizagens desse estudante poderão ser identificados e informados ao docente. A abordagem de sistemas multiagentes permite a decomposição do problema na modelagem multidimensional em vários subproblemas menores, diminuindo a complexidade da resolucão. Além disso, a habilidade social dos agentes pode permitir a interação com outros modelos de alunos visando comparações e validações do modelo.


Especificamente, os objetivos específicos deste trabalho são:
\begin{itemize}
 	\item Objetivo específico 1: Obter uma modelagem da arquitetura geral do SMA Frank utilizando-se da metodologia~\emph{Multiagent System Engineering} (MASE), proposta como uma solução de Engenharia de Software para o desenvolvimento de SMA;
	\item Objetivo específico 2: Obter uma implementação da arquitetura geral do SMA Frank;
	\item Objetivo específico 3: Obter uma implementação da arquitetura dos agentes assistentes de cognição, metacognição e afetivo;
	\item Objetivo específico 4: propor uma interface do agente assistente de cognição com o estudante;
	\item Objetivo específico 5: propor uma interface do agente assistente de cognição com o docente;
\end{itemize}

\section{Metodologia}
A metodologia utilizada para a realização deste trabalho é composta das seguintes atividades:
\begin{itemize}
 	\item Aprofundado estudo dos conceitos de Informática na Educação, Sistemas Multiagentes e~\emph{Multiagent Systems Engineering} (MASE).
	\item Estudo e pesquisa do~\emph{middleware} JADE e a sua integração com aplicações externas.
	\item Baseado nos estudos feitos, a modelagem da Solução utilizando a metodologia MASE.
	\item Desenvolvimento da aplicação multiagente com base na pesquisa a respeito do~\emph{JADE}.
	\item Desenvolvimento da aplicação web e a sua integração com o sistema multiagente.
	\item Testes em laboratório da solução desenvolvida e suas conclusões.
\end{itemize}

O aprofundamento dos estudos em Informática na Educação e Sistemas Multiagentes é importante para orientar o desenvolvimento deste trabalho com base na teoria e garantir as melhores práticas.

Norteado pela teoria acerca do~\emph{Multiagent Systems Engineering}, a modelagem da solução será composta por uma série de diagramas que irão justificar as escolhas da arquitetura proposta.

Usando tecnologias existentes e consolidadas, a arquitetura proposta irá usar o framework~\emph{JADE}, que é completamente desenvolvido na linguagem~\emph{JAVA} e simplifica a implementação de Sistemas Multiagentes (SMA) que cumprem as especificações FIPA. A arquitetura proposta também englobará uma interface web que utiliza a plataforma~\emph{open source JBoss Seam}, desenvolvida para auxiliar a construção de aplicações dinâmicas para a internet de forma simples e ágil.

Os testes deste trabalho serão realizados por meio de simulações com alunos e docentes. Considerando o cenário do aluno, ele deve autenticar-se e utilizar o sistema para a verificação do seu estilo de aprendizagem, bem como visualizar a criação dos agentes do seu grupo de trabalho. O cenário do docente deve possibilitar a visualização do estilo de aprendizagem dos seus alunos.

\section{Estrutura do Trabalho}
Este trabalho está  consiste na divisão de capítulos visando facilitar a leitura e organizar os conceitos que perfazem o desenvolvimento deste trabalho:
\begin{itemize}
	\item Capítulo 2 contém todos os fundamentos teóricos necessários para o desenvolvimento desse trabalho.
	\item Capítulo 3 contém a proposta de solução composta pela metodologia, modelagem da arquitetura e implementação.
	\item Capítulo 4 contém os testes realizados.
	\item Por fim, o capítulo 5 relata a conclusão e trabalhos futuros.
\end{itemize}
