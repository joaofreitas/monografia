package br.unb.frank.entity;

// Generated 29/01/2013 21:58:44 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Size;

/**
 * Aluno generated by hbm2java
 */
@Entity
@Table(name = "aluno")
public class Aluno implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private int id;
    private String nome;
    private String login;
    private String password;
    private Set<Questionario> questionarios = new HashSet<Questionario>(0);
    private Set<Turma> turmas = new HashSet<Turma>(0);

    @Transient
    private Dimensao dimensao;

    public Aluno() {
    }

    public Aluno(int id) {
	this.id = id;
    }

    public Aluno(int id, String nome, String login, String password,
	    Set<Questionario> questionarios) {
	this.id = id;
	this.nome = nome;
	this.login = login;
	this.password = password;
	this.questionarios = questionarios;
    }

    @Id
    @SequenceGenerator(name = "aluno_id_seq", sequenceName = "aluno_id_seq", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "aluno_id_seq")
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
	return this.id;
    }

    public void setId(int id) {
	this.id = id;
    }

    @Column(name = "nome")
    public String getNome() {
	return this.nome;
    }

    public void setNome(String nome) {
	this.nome = nome;
    }

    @Column(name = "login")
    public String getLogin() {
	return this.login;
    }

    public void setLogin(String login) {
	this.login = login;
    }

    @Column(name = "password", length = 15)
    @Size(max = 15)
    public String getPassword() {
	return this.password;
    }

    public void setPassword(String password) {
	this.password = password;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "aluno")
    public Set<Questionario> getQuestionarios() {
	return this.questionarios;
    }

    public void setQuestionarios(Set<Questionario> questionarios) {
	this.questionarios = questionarios;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "turma_aluno", joinColumns = @JoinColumn(name = "id_aluno"), inverseJoinColumns = @JoinColumn(name = "id_turma"))
    public Set<Turma> getTurmas() {
	return turmas;
    }

    public void setTurmas(Set<Turma> turmas) {
	this.turmas = turmas;
    }

    public Dimensao getDimensao() {
	return dimensao;
    }

    public void setDimensao(Dimensao dimensao) {
	this.dimensao = dimensao;
    }

}
