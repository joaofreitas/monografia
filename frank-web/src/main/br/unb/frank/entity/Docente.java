package br.unb.frank.entity;

// Generated 29/01/2013 22:34:58 by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

/**
 * Docente generated by hbm2java
 */
@Entity
@Table(name = "docente")
public class Docente implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private int id;
    private String nome;
    private List<Turma> turmas = new ArrayList<Turma>(0);
    private Usuario usuario;

    public Docente() {
    }

    public Docente(int id, String nome) {
	this.id = id;
	this.nome = nome;
    }

    public Docente(int id, String nome, List<Turma> turmas) {
	this.id = id;
	this.nome = nome;
	this.turmas = turmas;
    }

    @Id
    @SequenceGenerator(name = "docente_id_seq", sequenceName = "docente_id_seq", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "docente_id_seq")
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
	return this.id;
    }

    public void setId(int id) {
	this.id = id;
    }

    @Column(name = "nome", nullable = false)
    @NotNull
    public String getNome() {
	return this.nome;
    }

    public void setNome(String nome) {
	this.nome = nome;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "docente")
    public List<Turma> getTurmas() {
	return this.turmas;
    }

    public void setTurmas(List<Turma> turmas) {
	this.turmas = turmas;
    }
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_usuario")
    public Usuario getUsuario() {
	return usuario;
    }

    public void setUsuario(Usuario usuario) {
	this.usuario = usuario;
    }

}
